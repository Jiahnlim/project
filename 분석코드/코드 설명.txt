## csv파일 불러오기
## 컬럼 3번째에 paid 생성
## member 위에서 순서대로 고유값 부여한 uid란 컬럼을 생성
## 인덱스가 uid 컬럼이 pnum인 paid에 대한 pivot-table을 생성하고 결측치를 0으로 바꾼후 데이터프레임화
## matrix는 pivot_table 값을 numpy matrix로 만든 것 
## 사용자의 평균 구매 갯수
## 사용자-상품에 대해 사용자 평균 구매 갯수를 뺀 것.
## SVD로 행렬분해하여 U 행렬, sigma 행렬, V 전치 행렬을 반환.
## Sigma 행렬은 현재 0이 포함이 되지 않은 값으로만 구성되어 있음. 이를 대칭행렬로 변환
## U, Sigma, Vt의 내적을 수행하여 원본 행렬로 변환한 후  사용자 평균 구매 갯수를 더함. 데이터프레임화
## k값은 truncate svd로 상위 k개를 뽑아내는 것으로 성질을 100% 가져가는것은 아니지만 거의 근사한 값이 나옴(k값을 임의로 설정가능)
## scipy.sparse.linealg.svds는 truncate svd를 사용함

함수
# 최종적으로 만든 pred_df에서 사용자 index에 따라 상품 데이터 정렬 -> 사용자의 구매도가 높은 상품순으로 정렬
# 원본 구매 데이터에서 user id에 해당하는 데이터를 뽑아낸다.
# 위에서 뽑은 user_data와 원본 구매 데이터를 합친다.
# 원본 구매 데이터에서 사용자가 구매한 상품 데이터를 제외한 데이터를 추출
# 사용자의 구매도가 높은 상품 순으로 정렬된 데이터와 위 recommendations을 합친다.
# 로그파일에 필요한 데이터만 슬라이스

## 만약 result란 텍스트 파일이 있으면 삭제하고 없다면 넘어간다
## 중복이되지않는 값만 세서 int로 받아온다

반복문
# uid가 i인 회원에게 3개의 상품을 추천
# 데이터프레임 uid,member와 pnum을 합친다.
# uid와 pnum의 결측값을 0으로 바꾸고 정수형으로 형변환
# uid, member의 값을 모두 첫번째 행으로 바꾸고 pnum이 0인 행은 삭제
# 원본내용을 지우지않고 쌓는 방식으로 저장